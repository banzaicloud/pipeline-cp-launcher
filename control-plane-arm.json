{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageNamePrefix": {
            "type": "string",
            "minLength": "3",
            "maxLength": "10",
            "defaultValue": "storage",
            "metadata": {
              "description": "The prefix of the storage account name. Use only lowercase letters and numbers."
            }
        },
        "storageAccountSKU": {
            "defaultValue": "Premium_LRS",
            "allowedValues": [
                "Premium_LRS",
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS"
            ],
            "type": "string",
            "metadata": {
                "description": "The type of the Storage account SKU that will use the Pipeline Control Plane."
            }
        },
        "sshUserName": {
            "defaultValue": "ubuntu",
            "type": "string",
            "metadata": {
                "description": "The username SSH to the Virtual Machine hosting Pipeline Control Plane."
            }
        },
        "sshPublicKey": {
            "type": "string",
            "metadata": {
                "description": "The SSH public key in text format which will be assigned to the SSH User."
            }
        },
        "vmSize": {
            "defaultValue": "Standard_B2ms",
            "allowedValues": [
                "Standard_B2s",
                "Standard_B2ms",
                "Standard_B4ms",
                "Standard_D2s_v3",
                "Standard_D4s_v3"
            ],
            "type": "string",
            "metadata": {
                "description": "The size of the Virtual Machine that will host the Pipeline Control Plane. For example: Standard_XX where XX can A1, A2, A3 etc"
            }
        },
        "vmNamePrefix": {
            "defaultValue": "pipeline-cp",
            "type": "string",
            "minLength":"1",
            "maxLength": "49",
            "metadata": {
                "description": "The prefix of the virtual machine that will host the Pipeline Control Plane."
            }
        },
        "smtpServerAddress": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The address of your SMTP server. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpUser": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The username of your SMTP account. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpPassword": {
            "defaultValue": "",
            "type": "securestring",
            "metadata": {
                "description": "Optional. The password of your SMTP account. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpFrom": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The email address that will be used as a 'from' address. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpTo": {
            "defaultValue": "to@example.com",
            "type": "string",
            "metadata": {
                "description": "Optional. Fill this property to receive cluster related alerts through email."
            }
        },
        "slackWebhookUrl": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The slack web hook URL. Fill this property to receive cluster related alerts through Slack."
            }
        },
        "slackChannel": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. A Slack channel by name with \"channel\": \"#other-channel\", or send a Slackbot message to a specific user with \"channel\": \"@username\". Fill this property to receive cluster related alerts through Slack. "
            }
        },
        "pipelineImageTag": {
            "defaultValue": "0.3.0",
            "type": "string",
            "metadata": {
                "description": "Please specify the version of Pipline image to be used."
            }
        },
        "promIngUser": {
            "defaultValue": "admin",
            "minLength": 1,
            "type": "string",
            "metadata": {
                "description": "Please specify the username of the Prometheus user to be created."
            }
        },
        "promIngPass": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "Please specify the password of the Prometheus user to be created."
            }
        },
        "grafanaUser": {
            "type": "string",
            "defaultValue": "admin",
            "minLength": 1,
            "metadata": {
                "description": "Please specify the username of the Grafana user to be created."
            }
        },
        "grafanaPass": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "Please specify the password of the Grafana user to be created."
            }
        },
        "githubOrgs": {
            "type": "string",
            "metadata": {
                "description": "Please specify the comma separated list of GitHub organizations to grant access to for the Pipeline CI."
            }
        },
        "githubClient": {
            "type": "string",
            "metadata": {
                "description": "The Cliend ID of the OAuth App in GitHub."
            }
        },
        "githubSecret": {
            "type": "securestring",
            "metadata": {
                "description": "The Cliend Secret of the OAuth App in GitHub."
            }
        },
        "azureClientId": {
            "type": "string",
            "metadata": {
                "description": "The ID of registered application in AD."
            }
        },
        "azureClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "The password of the registered application in AD."
            }
        },
        "azureSubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "The id of your subscription that you want to use."
            }
        },
        "azureTenantId": {
            "type": "string",
            "metadata": {
                "description": "The tenant id of your azure account."
            }
        },
        "pipelineHelmRetryattempt": {
            "type": "string",
            "defaultValue": "30",
            "metadata": {
                "description": "The number of attemps that Pipeline tries to install Helm. Also the number times Pipeline pings Helm/Tiller wether it's up and running."
            }
        },
        "pipelineHelmRetrysleepseconds": {
            "type": "string",
            "defaultValue": "15",
            "metadata": {
                "description": "The time in seconds that Pipeline waits between attempts."
            }
        }
    },
    "variables": {
        "imagePublisher": "Canonical",
        "imageOffer": "UbuntuServer",
        "imageSku": "16.04-LTS",
        "imageVersion": "latest",
        "suffix": "[tolower(uniqueString(resourceGroup().id, deployment().name, subscription().subscriptionId))]",
        "storageAccount": "[concat(parameters('storageNamePrefix'),variables('suffix'))]",
        "networkInterface": "[concat(parameters('vmNamePrefix'),'-nInterface-',variables('suffix'))]",
        "publicIPAddresses": "[concat(parameters('vmNamePrefix'),'-publicIP-',variables('suffix'))]",
        "virtualNetwork": "[concat(parameters('vmNamePrefix'),'-vNet-',variables('suffix'))]",
        "virtualNetworkSubnet": "[concat(parameters('vmNamePrefix'),'-vNetSunet-',variables('suffix'))]",
        "networkSecurityGroup": "[concat(parameters('vmNamePrefix'),'-networkSG-',variables('suffix'))]",
        "userDataScript": "[concat('#!/bin/bash\n','echo H4sIAHMjsVoCA81abVPbOhb+7l+hzWVK+WA5oZS27OTuhuBChpAwcWjn7t6djGIrjostuZIMpC33t98j+SVOCIWd7qaXGYgtnXP0nKPzJoVf/uZkUjjTiDmU3aApkXPLklQhmyPGMwaP5WsapXRGorh8p0LQu0hZFr1LuVDoxD3udQaT96PhYOwOTtqMs4gpKoivohtqWagk7HcnnX6/3bWs86tjdzRwx643+eCOvN5w0G7hd/h1fWLk9t2O507GndP2zc7Xhyz3luWOuycrhK9wC7da1vlbb3IyWJUBEwf4rWWduf2LVeH7+C3ety5Hwwt3fOZeeeuzLdy0LD8TMbIlmiuVyiPHSYl/TUIqsR/zLMAh52FMsc8Th6TKCbivP+1rusBhGqJvqHhDJAiQbVF/zlEjoFMjD8TBNL7OplQwqkBoxB20fLXvKItIjBISsQb6FTlUGfGO5JnwgTyOpMKBUxOgR0rQM+n1K9wBv2UxJwEGiNdUGMRxxLI7J5tmTGXO03CfIwYVkKUi05h+D3QuwPZpgVmvHIKnZWlAFEX2ohqJGEiLQaEF+t1C8KMnlCBMaveyDbRiRnKfqOKZTg2Gcsrsl52pKF4diVikHgwIksykHQp+KzgvpyvE7dYb3NrHzT98ajf/KBTPafRW+CpuNzZ6rt1sNmqEMVXPIyRB8jzCwm98FrWb+BA3Ybq0zEKCFUtVIq54WjwLuWB+8cxCQctx5adBlpRvZMmQLtScMxvyQ2k37W7546fPlvUL+kjBWGxXoVvCFFIcNjUUJKBIzWmCzcYmRFyjOY+DUsHSdKVl1vRZWh/y1UIqmmhayvQWF3NLH4JsdZJeh0dHw1RFnMmjo3bDtmcc/M/2OZvBso0Kk/1Ze1Y5vQCHARVKn5vTOMnDqYwAqbiABFBEPkkjaYKghlbzOPqPvfN1Pevc2yZabJIEhwdYEYHDLxB28IDuvgAIqQSYtYXsLqoStWVpU1dRYJfAYfRxWyzHgQ2ScGkimQUmtVfyPknO9hckiS1LY0agTArmB7OZ6lBGsH6eLOcggI1pyk17NlfBYFlRotNo+yW4TSP0hU59uUmBninIeFRIQ22ngt8tcosdrQRB3a6Np+XovaLiBpzox2VJf06DLP6fyNLvgsdaWEIYWOUHhYLhg0rCeql8gjclmaQF8yvcfAL9W2kHTNoyCqhPaqgfluH750ky9tAPPy4KfhMiP9uMMLZ4trz1MIZyAftytCGQG9aeZUHOQBGEEoLsnDv0v//5n/sG+jvEWxFyKM0gyvR8Mc5oniLJDUWw0i2HRBjQmS47OnxmUUyrrgNyU6NMPILc4jBSc6g34MZaY8qUyT1Twr6QyFQvR3dtkGLAq1I7R+SAGaAt04ZxbvWqeJHEDZ0jTYguNV7OWha0Rb0PnbHbu2zvvMzRnKELqggUZ3KkREZzYICrdfgO778+wMWnkxRUjskwzKdOoaVj2sMZgZGmE6U3B/CnEwSCSgkDqYhuoPD3yqF/QLjaEKwSjNLeb7be2M0Du7n/AkyeENVW9E419qzLq+N+r7tFlNk0jvz/EqRVljjTa0CSv45SyGp0FkfhXNmQSvxr2Ot6ggrgr4p0KOYLoZ2v1Y7cr5D6QGjDOoLYEloiTVjY5H6FyapyNUnTGArerCppuVcZVzIuoM1QeIMjoBYTCc5Rdn4OdMbQG+fTdkBowvWpwdZx18JvsC4lANAsBqU2Ch+4GVgiYlhP6qMH9JkRsinald9s4IPtoLCTkPWht2s3N439znSnoSe0CSIo2owH+aQNXWFI26+a9qv9N4dvvu0+WBwybDSjUq3XBJyXwOQ6iASyU+Toxs8xvbnlp9/RoU7p5Bpb0DbfMrTzMgLlsr2j/CHc20RaHpJ0pu8OB+97p+1NVNBiRnHVIukeJ+XaDeIYElxCJRxLqLQCDqlMxhR6uNfwlLfvHwkkFhZi+GlYefop5eicqZC2HvjNyzmXSguDxLNnBm2oSnTteJInk6MB94oKaC97AEF1515sCvF9OE9qd68Aorx0ms4E5Zl1ndmPMy1fLwytTwC4C0K7mLEFrAlCa4TtcspsytItCgTt2qpHxaqm0ymjsXCiEnBBUpjcUJoTijHuBpOiJ7dluSe5+XMnczgcikwTZflB7a1wCFNwzuBs2q6mHGwIauD9/AWadm6ObLVKYOdHsPKgWe+m59AQSlyj1aFfk5QfwWoDRn/zOoM4mG9Ypl53dIsK5Vis6lWncHRISaLbwskNiTNwLd2GIpPG6iOWPs49GIWG+RM07RCnF9rYIoRXyBACzA911nO7I3c86XS7rudNzt3foO7u4nJ1TG6lZ2g7PuyNPKeLb+2dkn8XGteV5RQcgF68QMnNw+EfAAuuBhkBsC5BTnonD3BWCHuBwWjYtgRRxsS/1hVVW7Tf6Z5PPrrHZ8Ph+eRq1F9F6mlS/JFO55xfX4k4t2fBv0244NiM0Rrk7llnMHA3wu3mtEusBfNfx7yCQ48yp5nEBPKRKo4G2HBOoG5Nsr+sqb8L3f/Jlk9UqpsqA/1ifDnx3NEHdzTpnJyMIBa/rwDwToqOLMdfCNsidt38V9ivAPygc+E+jVqz6ZJUwdYDW4SdEmhiS9iXHc/7OBydPA1bs0E7GlSw9cAWYStegR4Pn4areAVU8S3CnAGoCuj70fDiaaiapQKrX7YEV4OC3ql0Y339PukNTo0rr6OO9H2klFgTG6w15u3CLdz3JU8pkzJGxi+hqSepaMF4pYX27MbeI2qsOHNN8JZUCQWZgQeUlj8ddd53Bp2l4Yt5XByITDd9VVq+xrxduGXiKOFqCz8K97Ju4ZoADXkrmM1Jmoswh9wbn10dT4aj0xxxIKD9L/FSdoNPRsOBa+ZzwBX3dvH6cUSZqiHu9nvuYJxbOeZTEmOSqTnO6aKgBjYf2i7cZatfwM07/kfg5tQ1yMtOfyv5I0p112mu4hQJTcrrXbr9Hmx876JzWlwm1htUQ4uBOM8TqwK2jJt8yQQt992cWP51NXILB3l4ZtHUXUNdHFk2ifl5Kiw9Z0WNmv9sUsVbetBjIn+GShJc2ReR+Yarvjfe1bHXHfUux73hYPMOeTXODfu0KvhnqKYoI6sON3YHncccbmyoNyhSitmWCmc0TkZUiUVHKZqkaiXYiy8QxqPfOuOxe3G55m+aF4sas9FmXeKWSm+1rKfvrTx9kRvIR7Tx+q576em7yxPvMZXqYlb1qs/8n5Qrv99Ev66JNze+xWVa/l0o1rfitVn9+oAFrBTQaRbC5y0xN4gqSijPFDpsNmsXyPriq7SFg6WcW/Cr/7kipAzZCglJkD1FB813h3qdDQxOFEwM1QA1GtafJqo8r7sjAAA= | base64 -d | gunzip | ','SMTP_SERVER_ADDRESS=',parameters('smtpServerAddress'),' ','SMTP_USER=',parameters('smtpUser'),' ','SMTP_PASSWORD=',base64(parameters('smtpPassword')),' ','SMTP_FROM=',parameters('smtpFrom'),' ','SMTP_TO=',parameters('smtpTo'),' ','SLACK_WEBHOOK_URL=',parameters('slackWebhookUrl'),' ','SLACK_CHANNEL=',parameters('slackChannel'),' ','PIPELINE_IMAGE_TAG=',parameters('pipelineImageTag'),' ','PROM_ING_USER=',parameters('promIngUser'),' ','PROM_ING_PASS=',parameters('promIngPass'),' ','GRAFANA_USER=',parameters('grafanaUser'),' ','GRAFANA_PASS=',parameters('grafanaPass'),' ','GITHUB_ORGS=',parameters('githubOrgs'),' ','GITHUB_CLIENT=',parameters('githubClient'),' ','GITHUB_SECRET=',parameters('githubSecret'),' ','AZURE_CLIENT_ID=',base64(parameters('azureClientId')),' ','AZURE_CLIENT_SECRET=',base64(parameters('azureClientSecret')),' ','AZURE_SUBSCRIPTION_ID=',base64(parameters('azureSubscriptionId')),' ','AZURE_TENANT_ID=',base64(parameters('azureTenantId')),' ','PIPELINE_HELM_RETRYATTEMPT=',parameters('pipelineHelmRetryattempt'),' ','PIPELINE_HELM_RETRYSLEEPSECONDS=',parameters('pipelineHelmRetrysleepseconds'),' ','bash')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccount')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Storage Account"
            },
            "properties": {
                "accountType": "[parameters('storageAccountSKU')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddresses')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Public IP Address"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[tolower(concat(parameters('vmNamePrefix'),'-',variables('suffix')))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetwork')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane VirtualNetwork"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('virtualNetworkSubnet')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24"
                        },
                        "tags": {
                            "displayName": "Control Plane VirtualNetwork Subnet"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroup')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Network Security Group"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "http",
                        "properties": {
                            "description": "Allow HTTP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 210,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('networkInterface')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Network Interface"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddresses'))]"
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetwork')), '/subnets/', variables('virtualNetworkSubnet'))]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/',variables('publicIPAddresses'))]",
                "[concat('Microsoft.Network/virtualNetworks/',variables('virtualNetwork'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('vmNamePrefix'),'-', variables('suffix'))]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane VM"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('vmNamePrefix'), variables('suffix'))]",
                    "adminUsername": "[parameters('sshUserName')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/',parameters('sshUserName'),'/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('sshPublicKey')]"
                                }
                            ]
                        }
                    },
                    "customData": "[base64(variables('userDataScript'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSku')]",
                        "version": "[variables('imageVersion')]"
                    },
                    "osDisk": {
                        "name": "[tolower(concat(parameters('vmNamePrefix'),'-disk-', variables('suffix')))]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterface'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccount'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterface'))]"
            ]
        }
    ],
    "outputs": {
      "publicDns": {
          "value": "[reference(variables('publicIPAddresses')).dnsSettings.fqdn]",
          "type": "string"
      },
      "pipeline": {
          "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/pipeline')]",
          "type": "string"
      },
      "grafana": {
        "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/grafana')]",
        "type": "string"
      },
      "prometheusServer": {
        "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/prometheus')]",
        "type": "string"
      },
      "prometheusAlertManager": {
        "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/alertmanager')]",
        "type": "string"
      },
      "ssh": {
        "value": "[concat('ssh ubuntu@', reference(variables('publicIPAddresses')).dnsSettings.fqdn)]",
        "type": "string"
      }
    }
}

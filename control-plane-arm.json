{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageNamePrefix": {
            "type": "string",
            "minLength": "3",
            "maxLength": "10",
            "defaultValue": "storage",
            "metadata": {
              "description": "The prefix of the storage account name. Use only lowercase letters and numbers."
            }
        },
        "storageAccountSKU": {
            "defaultValue": "Premium_LRS",
            "allowedValues": [
                "Premium_LRS",
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS"
            ],
            "type": "string",
            "metadata": {
                "description": "The type of the Storage account SKU that will use the Pipeline Control Plane."
            }
        },
        "sshUserName": {
            "defaultValue": "ubuntu",
            "type": "string",
            "metadata": {
                "description": "The username SSH to the Virtual Machine hosting Pipeline Control Plane."
            }
        },
        "sshPublicKey": {
            "type": "string",
            "metadata": {
                "description": "The SSH public key in text format which will be assigned to the SSH User."
            }
        },
        "vmSize": {
            "defaultValue": "Standard_B2ms",
            "allowedValues": [
                "Standard_B2s",
                "Standard_B2ms",
                "Standard_B4ms"
            ],
            "type": "string",
            "metadata": {
                "description": "The size of the Virtual Machine that will host the Pipeline Control Plane. For example: Standard_XX where XX can A1, A2, A3 etc"
            }
        },
        "vmNamePrefix": {
            "defaultValue": "pipeline-cp",
            "type": "string",
            "minLength":"1",
            "maxLength": "49",
            "metadata": {
                "description": "The prefix of the virtual machine that will host the Pipeline Control Plane."
            }
        },
        "smtpServerAddress": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The address of your SMTP server. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpUser": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The username of your SMTP account. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpPassword": {
            "defaultValue": "",
            "type": "securestring",
            "metadata": {
                "description": "Optional. The password of your SMTP account. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpFrom": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The email address that will be used as a 'from' address. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpTo": {
            "defaultValue": "to@example.com",
            "type": "string",
            "metadata": {
                "description": "Optional. Fill this property to receive cluster related alerts through email."
            }
        },
        "slackWebhookUrl": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The slack web hook URL. Fill this property to receive cluster related alerts through Slack."
            }
        },
        "slackChannel": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. A Slack channel by name with \"channel\": \"#other-channel\", or send a Slackbot message to a specific user with \"channel\": \"@username\". Fill this property to receive cluster related alerts through Slack. "
            }
        },
        "pipelineImageTag": {
            "defaultValue": "latest",
            "type": "string",
            "metadata": {
                "description": "Please specify the version of Pipline image to be used."
            }
        },
        "promIngUser": {
            "defaultValue": "admin",
            "minLength": 1,
            "type": "string",
            "metadata": {
                "description": "Please specify the username of the Prometheus user to be created."
            }
        },
        "promIngPass": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "Please specify the password of the Prometheus user to be created."
            }
        },
        "grafanaUser": {
            "type": "string",
            "defaultValue": "admin",
            "minLength": 1,
            "metadata": {
                "description": "Please specify the username of the Grafana user to be created."
            }
        },
        "grafanaPass": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "Please specify the password of the Grafana user to be created."
            }
        },
        "githubOrgs": {
            "type": "string",
            "metadata": {
                "description": "Please specify the comma separated list of GitHub organizations to grant access to for the Pipeline CI."
            }
        },
        "githubClient": {
            "type": "string",
            "metadata": {
                "description": "The Cliend ID of the OAuth App in GitHub."
            }
        },
        "githubSecret": {
            "type": "securestring",
            "metadata": {
                "description": "The Cliend Secret of the OAuth App in GitHub."
            }
        },
        "azureClientId": {
            "type": "string",
            "metadata": {
                "description": "The ID of registered application in AD."
            }
        },
        "azureClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "The password of the registered application in AD."
            }
        },
        "azureSubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "The id of your subscription that you want to use."
            }
        },
        "azureTenantId": {
            "type": "string",
            "metadata": {
                "description": "The tenant id of your azure account."
            }
        },
        "pipelineHelmRetryattempt": {
            "type": "string",
            "defaultValue": "30",
            "metadata": {
                "description": "The number of attemps that Pipeline tries to install Helm. Also the number times Pipeline pings Helm/Tiller wether it's up and running."
            }
        },
        "pipelineHelmRetrysleepseconds": {
            "type": "string",
            "defaultValue": "15",
            "metadata": {
                "description": "The time in seconds that Pipeline waits between attempts."
            }
        }
    },
    "variables": {
        "imagePublisher": "Canonical",
        "imageOffer": "UbuntuServer",
        "imageSku": "16.04-LTS",
        "imageVersion": "latest",
        "suffix": "[tolower(uniqueString(resourceGroup().id, deployment().name, subscription().subscriptionId))]",
        "storageAccount": "[concat(parameters('storageNamePrefix'),variables('suffix'))]",
        "networkInterface": "[concat(parameters('vmNamePrefix'),'-nInterface-',variables('suffix'))]",
        "publicIPAddresses": "[concat(parameters('vmNamePrefix'),'-publicIP-',variables('suffix'))]",
        "virtualNetwork": "[concat(parameters('vmNamePrefix'),'-vNet-',variables('suffix'))]",
        "virtualNetworkSubnet": "[concat(parameters('vmNamePrefix'),'-vNetSunet-',variables('suffix'))]",
        "networkSecurityGroup": "[concat(parameters('vmNamePrefix'),'-networkSG-',variables('suffix'))]",
        "userDataScript": "[concat('#!/bin/bash\n','echo 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 | base64 -d | gunzip | ','SMTP_SERVER_ADDRESS=',parameters('smtpServerAddress'),' ','SMTP_USER=',parameters('smtpUser'),' ','SMTP_PASSWORD=',base64(parameters('smtpPassword')),' ','SMTP_FROM=',parameters('smtpFrom'),' ','SMTP_TO=',parameters('smtpTo'),' ','SLACK_WEBHOOK_URL=',parameters('slackWebhookUrl'),' ','SLACK_CHANNEL=',parameters('slackChannel'),' ','PIPELINE_IMAGE_TAG=',parameters('pipelineImageTag'),' ','PROM_ING_USER=',parameters('promIngUser'),' ','PROM_ING_PASS=',parameters('promIngPass'),' ','GRAFANA_USER=',parameters('grafanaUser'),' ','GRAFANA_PASS=',parameters('grafanaPass'),' ','GITHUB_ORGS=',parameters('githubOrgs'),' ','GITHUB_CLIENT=',parameters('githubClient'),' ','GITHUB_SECRET=',parameters('githubSecret'),' ','AZURE_CLIENT_ID=',base64(parameters('azureClientId')),' ','AZURE_CLIENT_SECRET=',base64(parameters('azureClientSecret')),' ','AZURE_SUBSCRIPTION_ID=',base64(parameters('azureSubscriptionId')),' ','AZURE_TENANT_ID=',base64(parameters('azureTenantId')),' ','PIPELINE_HELM_RETRYATTEMPT=',parameters('pipelineHelmRetryattempt'),' ','PIPELINE_HELM_RETRYSLEEPSECONDS=',parameters('pipelineHelmRetrysleepseconds'),' ','bash')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccount')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Storage Account"
            },
            "properties": {
                "accountType": "[parameters('storageAccountSKU')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddresses')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Public IP Address"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[tolower(concat(parameters('vmNamePrefix'),'-',variables('suffix')))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetwork')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane VirtualNetwork"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('virtualNetworkSubnet')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24"
                        },
                        "tags": {
                            "displayName": "Control Plane VirtualNetwork Subnet"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroup')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Network Security Group"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "http",
                        "properties": {
                            "description": "Allow HTTP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 210,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('networkInterface')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Network Interface"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddresses'))]"
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetwork')), '/subnets/', variables('virtualNetworkSubnet'))]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/',variables('publicIPAddresses'))]",
                "[concat('Microsoft.Network/virtualNetworks/',variables('virtualNetwork'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('vmNamePrefix'),'-', variables('suffix'))]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane VM"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('vmNamePrefix'), variables('suffix'))]",
                    "adminUsername": "[parameters('sshUserName')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/',parameters('sshUserName'),'/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('sshPublicKey')]"
                                }
                            ]
                        }
                    },
                    "customData": "[base64(variables('userDataScript'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSku')]",
                        "version": "[variables('imageVersion')]"
                    },
                    "osDisk": {
                        "name": "[tolower(concat(parameters('vmNamePrefix'),'-disk-', variables('suffix')))]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterface'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccount'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterface'))]"
            ]
        }
    ],
    "outputs": {
      "publicDns": {
          "value": "[reference(variables('publicIPAddresses')).dnsSettings.fqdn]",
          "type": "string"
      },
      "pipeline": {
          "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/pipeline')]",
          "type": "string"
      },
      "grafana": {
        "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/grafana')]",
        "type": "string"
      },
      "prometheusServer": {
        "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/prometheus')]",
        "type": "string"
      },
      "prometheusAlertManager": {
        "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/alertmanager')]",
        "type": "string"
      },
      "ssh": {
        "value": "[concat('ssh ubuntu@', reference(variables('publicIPAddresses')).dnsSettings.fqdn)]",
        "type": "string"
      }
    }
}

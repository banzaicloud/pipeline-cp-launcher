{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageNamePrefix": {
            "type": "string",
            "minLength": "3",
            "maxLength": "10",
            "defaultValue": "storage",
            "metadata": {
              "description": "The prefix of the storage account name. Use only lowercase letters and numbers."
            }
        },
        "storageAccountSKU": {
            "defaultValue": "Premium_LRS",
            "allowedValues": [
                "Premium_LRS",
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS"
            ],
            "type": "string",
            "metadata": {
                "description": "The type of the Storage account SKU that will use the Pipeline Control Plane."
            }
        },
        "sshUserName": {
            "defaultValue": "ubuntu",
            "type": "string",
            "metadata": {
                "description": "The username SSH to the Virtual Machine hosting Pipeline Control Plane."
            }
        },
        "sshPublicKey": {
            "type": "string",
            "metadata": {
                "description": "The SSH public key in text format which will be assigned to the SSH User."
            }
        },
        "vmSize": {
            "defaultValue": "Standard_B2ms",
            "allowedValues": [
                "Standard_B2s",
                "Standard_B2ms",
                "Standard_B4ms"
            ],
            "type": "string",
            "metadata": {
                "description": "The size of the Virtual Machine that will host the Pipeline Control Plane. For example: Standard_XX where XX can A1, A2, A3 etc"
            }
        },
        "vmNamePrefix": {
            "defaultValue": "pipeline-cp",
            "type": "string",
            "minLength":"1",
            "maxLength": "49",
            "metadata": {
                "description": "The prefix of the virtual machine that will host the Pipeline Control Plane."
            }
        },
        "smtpServerAddress": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The address of your SMTP server. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpUser": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The username of your SMTP account. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpPassword": {
            "defaultValue": "",
            "type": "securestring",
            "metadata": {
                "description": "Optional. The password of your SMTP account. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpFrom": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The email address that will be used as a 'from' address. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpTo": {
            "defaultValue": "to@example.com",
            "type": "string",
            "metadata": {
                "description": "Optional. Fill this property to receive cluster related alerts through email."
            }
        },
        "slackWebhookUrl": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The slack web hook URL. Fill this property to receive cluster related alerts through Slack."
            }
        },
        "slackChannel": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. A Slack channel by name with \"channel\": \"#other-channel\", or send a Slackbot message to a specific user with \"channel\": \"@username\". Fill this property to receive cluster related alerts through Slack. "
            }
        },
        "pipelineImageTag": {
            "defaultValue": "latest",
            "type": "string",
            "metadata": {
                "description": "Please specify the version of Pipline image to be used."
            }
        },
        "promIngUser": {
            "defaultValue": "admin",
            "minLength": 1,
            "type": "string",
            "metadata": {
                "description": "Please specify the username of the Prometheus user to be created."
            }
        },
        "promIngPass": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "Please specify the password of the Prometheus user to be created."
            }
        },
        "grafanaUser": {
            "type": "string",
            "defaultValue": "admin",
            "minLength": 1,
            "metadata": {
                "description": "Please specify the username of the Grafana user to be created."
            }
        },
        "grafanaPass": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "Please specify the password of the Grafana user to be created."
            }
        },
        "githubOrgs": {
            "type": "string",
            "metadata": {
                "description": "Please specify the GitHub organizations whose repositories will be used by the Pipeline."
            }
        },
        "githubClient": {
            "type": "string",
            "metadata": {
                "description": "The Cliend ID of the newly created OAuth App in GitHub."
            }
        },
        "githubSecret": {
            "type": "securestring",
            "metadata": {
                "description": "The Cliend Secret of the newly created OAuth App in GitHub."
            }
        },
        "azureClientId": {
            "type": "string",
            "metadata": {
                "description": "The ID of registered application in AD."
            }
        },
        "azureClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "The password of the registered application in AD."
            }
        },
        "azureSubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "The id of your subscription that you want to use."
            }
        },
        "azureTenantId": {
            "type": "string",
            "metadata": {
                "description": "The tenant id of your azure account."
            }
        },
        "pipelineHelmRetryattempt": {
            "type": "string",
            "defaultValue": "30",
            "metadata": {
                "description": "The number of attemps that Pipeline tries to install Helm. Also the number times Pipeline pings Helm/Tiller wether it's up and running."
            }
        },
        "pipelineHelmRetrysleepseconds": {
            "type": "string",
            "defaultValue": "15",
            "metadata": {
                "description": "The time in seconds that Pipeline waits between attempts."
            }
        }
    },
    "variables": {
        "imagePublisher": "Canonical",
        "imageOffer": "UbuntuServer",
        "imageSku": "16.04-LTS",
        "imageVersion": "latest",
        "suffix": "[tolower(uniqueString(resourceGroup().id, deployment().name, subscription().subscriptionId))]",
        "storageAccount": "[concat(parameters('storageNamePrefix'),variables('suffix'))]",
        "networkInterface": "[concat(parameters('vmNamePrefix'),'-nInterface-',variables('suffix'))]",
        "publicIPAddresses": "[concat(parameters('vmNamePrefix'),'-publicIP-',variables('suffix'))]",
        "virtualNetwork": "[concat(parameters('vmNamePrefix'),'-vNet-',variables('suffix'))]",
        "virtualNetworkSubnet": "[concat(parameters('vmNamePrefix'),'-vNetSunet-',variables('suffix'))]",
        "networkSecurityGroup": "[concat(parameters('vmNamePrefix'),'-networkSG-',variables('suffix'))]",
        "userDataScript": "[concat('#!/bin/bash\n','echo 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 | base64 -d | gunzip | ','SMTP_SERVER_ADDRESS=',parameters('smtpServerAddress'),' ','SMTP_USER=',parameters('smtpUser'),' ','SMTP_PASSWORD=',base64(parameters('smtpPassword')),' ','SMTP_FROM=',parameters('smtpFrom'),' ','SMTP_TO=',parameters('smtpTo'),' ','SLACK_WEBHOOK_URL=',parameters('slackWebhookUrl'),' ','SLACK_CHANNEL=',parameters('slackChannel'),' ','PIPELINE_IMAGE_TAG=',parameters('pipelineImageTag'),' ','PROM_ING_USER=',parameters('promIngUser'),' ','PROM_ING_PASS=',parameters('promIngPass'),' ','GRAFANA_USER=',parameters('grafanaUser'),' ','GRAFANA_PASS=',parameters('grafanaPass'),' ','GITHUB_ORGS=',parameters('githubOrgs'),' ','GITHUB_CLIENT=',parameters('githubClient'),' ','GITHUB_SECRET=',parameters('githubSecret'),' ','AZURE_CLIENT_ID=',base64(parameters('azureClientId')),' ','AZURE_CLIENT_SECRET=',base64(parameters('azureClientSecret')),' ','AZURE_SUBSCRIPTION_ID=',base64(parameters('azureSubscriptionId')),' ','AZURE_TENANT_ID=',base64(parameters('azureTenantId')),' ','PIPELINE_HELM_RETRYATTEMPT=',parameters('pipelineHelmRetryattempt'),' ','PIPELINE_HELM_RETRYSLEEPSECONDS=',parameters('pipelineHelmRetrysleepseconds'),' ','bash')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccount')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Storage Account"
            },
            "properties": {
                "accountType": "[parameters('storageAccountSKU')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddresses')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Public IP Address"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[tolower(concat(parameters('vmNamePrefix'),'-',variables('suffix')))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetwork')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane VirtualNetwork"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('virtualNetworkSubnet')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24"
                        },
                        "tags": {
                            "displayName": "Control Plane VirtualNetwork Subnet"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroup')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Network Security Group"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "http",
                        "properties": {
                            "description": "Allow HTTP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 210,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('networkInterface')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Network Interface"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddresses'))]"
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetwork')), '/subnets/', variables('virtualNetworkSubnet'))]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/',variables('publicIPAddresses'))]",
                "[concat('Microsoft.Network/virtualNetworks/',variables('virtualNetwork'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('vmNamePrefix'),'-', variables('suffix'))]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane VM"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('vmNamePrefix'), variables('suffix'))]",
                    "adminUsername": "[parameters('sshUserName')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/',parameters('sshUserName'),'/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('sshPublicKey')]"
                                }
                            ]
                        }
                    },
                    "customData": "[base64(variables('userDataScript'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSku')]",
                        "version": "[variables('imageVersion')]"
                    },
                    "osDisk": {
                        "name": "[tolower(concat(parameters('vmNamePrefix'),'-disk-', variables('suffix')))]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterface'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccount'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterface'))]"
            ]
        }
    ],
    "outputs": {
      "publicDns": {
          "value": "[reference(variables('publicIPAddresses')).dnsSettings.fqdn]",
          "type": "string"
      },
      "pipeline": {
          "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/pipeline')]",
          "type": "string"
      },
      "grafana": {
        "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/grafana')]",
        "type": "string"
      },
      "prometheusServer": {
        "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/prometheus')]",
        "type": "string"
      },
      "prometheusAlertManager": {
        "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/alertmanager')]",
        "type": "string"
      },
      "ssh": {
        "value": "[concat('ssh ubuntu@', reference(variables('publicIPAddresses')).dnsSettings.fqdn)]",
        "type": "string"
      }
    }
}

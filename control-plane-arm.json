{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageNamePrefix": {
            "type": "string",
            "minLength": "3",
            "maxLength": "10",
            "defaultValue": "storage",
            "metadata": {
              "description": "The prefix of the storage account name. Use only lowercase letters and numbers."
            }
        },
        "storageAccountSKU": {
            "defaultValue": "Premium_LRS",
            "allowedValues": [
                "Premium_LRS",
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS"
            ],
            "type": "string",
            "metadata": {
                "description": "The type of the Storage account SKU that will use the Pipeline Control Plane."
            }
        },
        "sshUserName": {
            "defaultValue": "ubuntu",
            "type": "string",
            "metadata": {
                "description": "The username SSH to the Virtual Machine hosting Pipeline Control Plane."
            }
        },
        "sshPublicKey": {
            "type": "string",
            "metadata": {
                "description": "The SSH public key in text format which will be assigned to the SSH User."
            }
        },
        "vmSize": {
            "defaultValue": "Standard_B2ms",
            "allowedValues": [
                "Standard_B2s",
                "Standard_B2ms",
                "Standard_B4ms",
                "Standard_D2s_v3",
                "Standard_D4s_v3"
            ],
            "type": "string",
            "metadata": {
                "description": "The size of the Virtual Machine that will host the Pipeline Control Plane. For example: Standard_XX where XX can A1, A2, A3 etc"
            }
        },
        "vmNamePrefix": {
            "defaultValue": "pipeline-cp",
            "type": "string",
            "minLength":"1",
            "maxLength": "49",
            "metadata": {
                "description": "The prefix of the virtual machine that will host the Pipeline Control Plane."
            }
        },
        "smtpServerAddress": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The address of your SMTP server. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpUser": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The username of your SMTP account. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpPassword": {
            "defaultValue": "",
            "type": "securestring",
            "metadata": {
                "description": "Optional. The password of your SMTP account. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpFrom": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The email address that will be used as a 'from' address. Fill this property to receive cluster related alerts through email."
            }
        },
        "smtpTo": {
            "defaultValue": "to@example.com",
            "type": "string",
            "metadata": {
                "description": "Optional. Fill this property to receive cluster related alerts through email."
            }
        },
        "slackWebhookUrl": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The slack web hook URL. Fill this property to receive cluster related alerts through Slack."
            }
        },
        "slackChannel": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. A Slack channel by name with \"channel\": \"#other-channel\", or send a Slackbot message to a specific user with \"channel\": \"@username\". Fill this property to receive cluster related alerts through Slack. "
            }
        },
        "pipelineImageTag": {
            "defaultValue": "0.3.0",
            "type": "string",
            "metadata": {
                "description": "Please specify the version of Pipline image to be used."
            }
        },
        "promIngUser": {
            "defaultValue": "admin",
            "minLength": 1,
            "type": "string",
            "metadata": {
                "description": "Please specify the username of the Prometheus user to be created."
            }
        },
        "promIngPass": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "Please specify the password of the Prometheus user to be created."
            }
        },
        "grafanaUser": {
            "type": "string",
            "defaultValue": "admin",
            "minLength": 1,
            "metadata": {
                "description": "Please specify the username of the Grafana user to be created."
            }
        },
        "grafanaPass": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "Please specify the password of the Grafana user to be created."
            }
        },
        "githubOrgs": {
            "type": "string",
            "metadata": {
                "description": "Please specify the comma separated list of GitHub organizations to grant access to for the Pipeline CI."
            }
        },
        "githubClient": {
            "type": "string",
            "metadata": {
                "description": "The Cliend ID of the OAuth App in GitHub."
            }
        },
        "githubSecret": {
            "type": "securestring",
            "metadata": {
                "description": "The Cliend Secret of the OAuth App in GitHub."
            }
        },
        "azureClientId": {
            "type": "string",
            "metadata": {
                "description": "The ID of registered application in AD."
            }
        },
        "azureClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "The password of the registered application in AD."
            }
        },
        "azureSubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "The id of your subscription that you want to use."
            }
        },
        "azureTenantId": {
            "type": "string",
            "metadata": {
                "description": "The tenant id of your azure account."
            }
        },
        "pipelineHelmRetryattempt": {
            "type": "string",
            "defaultValue": "30",
            "metadata": {
                "description": "The number of attemps that Pipeline tries to install Helm. Also the number times Pipeline pings Helm/Tiller wether it's up and running."
            }
        },
        "pipelineHelmRetrysleepseconds": {
            "type": "string",
            "defaultValue": "15",
            "metadata": {
                "description": "The time in seconds that Pipeline waits between attempts."
            }
        },
        "trustedUserCaUrl": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Optional. The URL to download the SSH TrustedUserCAKeys from."
            }
        }
    },
    "variables": {
        "imagePublisher": "Canonical",
        "imageOffer": "UbuntuServer",
        "imageSku": "16.04-LTS",
        "imageVersion": "latest",
        "suffix": "[tolower(uniqueString(resourceGroup().id, deployment().name, subscription().subscriptionId))]",
        "storageAccount": "[concat(parameters('storageNamePrefix'),variables('suffix'))]",
        "networkInterface": "[concat(parameters('vmNamePrefix'),'-nInterface-',variables('suffix'))]",
        "publicIPAddresses": "[concat(parameters('vmNamePrefix'),'-publicIP-',variables('suffix'))]",
        "virtualNetwork": "[concat(parameters('vmNamePrefix'),'-vNet-',variables('suffix'))]",
        "virtualNetworkSubnet": "[concat(parameters('vmNamePrefix'),'-vNetSunet-',variables('suffix'))]",
        "networkSecurityGroup": "[concat(parameters('vmNamePrefix'),'-networkSG-',variables('suffix'))]",
        "userDataScript": "[concat('#!/bin/bash\n','echo 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 | base64 -d | gunzip | ','SMTP_SERVER_ADDRESS=',parameters('smtpServerAddress'),' ','SMTP_USER=',parameters('smtpUser'),' ','SMTP_PASSWORD=',base64(parameters('smtpPassword')),' ','SMTP_FROM=',parameters('smtpFrom'),' ','SMTP_TO=',parameters('smtpTo'),' ','SLACK_WEBHOOK_URL=',parameters('slackWebhookUrl'),' ','SLACK_CHANNEL=',parameters('slackChannel'),' ','PIPELINE_IMAGE_TAG=',parameters('pipelineImageTag'),' ','PROM_ING_USER=',parameters('promIngUser'),' ','PROM_ING_PASS=',parameters('promIngPass'),' ','GRAFANA_USER=',parameters('grafanaUser'),' ','GRAFANA_PASS=',parameters('grafanaPass'),' ','GITHUB_ORGS=',parameters('githubOrgs'),' ','GITHUB_CLIENT=',parameters('githubClient'),' ','GITHUB_SECRET=',parameters('githubSecret'),' ','AZURE_CLIENT_ID=',base64(parameters('azureClientId')),' ','AZURE_CLIENT_SECRET=',base64(parameters('azureClientSecret')),' ','AZURE_SUBSCRIPTION_ID=',base64(parameters('azureSubscriptionId')),' ','AZURE_TENANT_ID=',base64(parameters('azureTenantId')),' ','PIPELINE_HELM_RETRYATTEMPT=',parameters('pipelineHelmRetryattempt'),' ','PIPELINE_HELM_RETRYSLEEPSECONDS=',parameters('pipelineHelmRetrysleepseconds'),' ','TRUSTED_USER_CA_URL=',parameters('trustedUserCaUrl'),' ','bash')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccount')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Storage Account"
            },
            "properties": {
                "accountType": "[parameters('storageAccountSKU')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddresses')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Public IP Address"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[tolower(concat(parameters('vmNamePrefix'),'-',variables('suffix')))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetwork')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane VirtualNetwork"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('virtualNetworkSubnet')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24"
                        },
                        "tags": {
                            "displayName": "Control Plane VirtualNetwork Subnet"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroup')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Network Security Group"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "http",
                        "properties": {
                            "description": "Allow HTTP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 210,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('networkInterface')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane Network Interface"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddresses'))]"
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetwork')), '/subnets/', variables('virtualNetworkSubnet'))]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/',variables('publicIPAddresses'))]",
                "[concat('Microsoft.Network/virtualNetworks/',variables('virtualNetwork'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('vmNamePrefix'),'-', variables('suffix'))]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Control Plane VM"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('vmNamePrefix'), variables('suffix'))]",
                    "adminUsername": "[parameters('sshUserName')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/',parameters('sshUserName'),'/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('sshPublicKey')]"
                                }
                            ]
                        }
                    },
                    "customData": "[base64(variables('userDataScript'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSku')]",
                        "version": "[variables('imageVersion')]"
                    },
                    "osDisk": {
                        "name": "[tolower(concat(parameters('vmNamePrefix'),'-disk-', variables('suffix')))]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterface'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccount'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterface'))]"
            ]
        }
    ],
    "outputs": {
      "publicDns": {
          "value": "[reference(variables('publicIPAddresses')).dnsSettings.fqdn]",
          "type": "string"
      },
      "pipeline": {
          "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/pipeline')]",
          "type": "string"
      },
      "grafana": {
        "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/grafana')]",
        "type": "string"
      },
      "prometheusServer": {
        "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/prometheus')]",
        "type": "string"
      },
      "prometheusAlertManager": {
        "value": "[concat('http://', reference(variables('publicIPAddresses')).dnsSettings.fqdn, '/alertmanager')]",
        "type": "string"
      },
      "ssh": {
        "value": "[concat('ssh ubuntu@', reference(variables('publicIPAddresses')).dnsSettings.fqdn)]",
        "type": "string"
      }
    }
}
